/*
 * This file was automatically generated by EvoSuite
 * Thu Aug 17 10:09:20 GMT 2023
 */

package net.mooctest;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import net.mooctest.SplaySubTree;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class SplaySubTree_ESTest extends SplaySubTree_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      SplaySubTree<String> splaySubTree0 = new SplaySubTree<String>("");
      SplaySubTree<String> splaySubTree1 = splaySubTree0.add("7Q.m");
      splaySubTree1.indexOf("7Q.m");
      SplaySubTree<String> splaySubTree2 = splaySubTree1.get(2L);
      SplaySubTree<String> splaySubTree3 = splaySubTree2.remove("7Q.m");
      splaySubTree3.add("ojWV$|D;LNY5");
      splaySubTree3.remove("7Q.m");
      splaySubTree3.find("ojWV$|D;LNY5");
      splaySubTree1.add("7Q.m");
      // Undeclared exception!
      splaySubTree0.add("ojWV$|D;LNY5");
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      SplaySubTree<String> splaySubTree0 = new SplaySubTree<String>("");
      SplaySubTree<String> splaySubTree1 = splaySubTree0.add("7Q.m");
      SplaySubTree<String> splaySubTree2 = splaySubTree1.find("7Q.m");
      splaySubTree2.indexOf("7Q.m");
      SplaySubTree<String> splaySubTree3 = splaySubTree1.get(2L);
      splaySubTree3.remove("7Q.m");
      SplaySubTree<String> splaySubTree4 = splaySubTree3.find("");
      SplaySubTree<String> splaySubTree5 = splaySubTree4.add(" cnt=");
      splaySubTree5.remove("");
      splaySubTree4.find("7Q.m");
      SplaySubTree<String> splaySubTree6 = splaySubTree5.add(":8~$z'Hi");
      splaySubTree6.indexOf("");
      splaySubTree4.toString();
      SplaySubTree<String> splaySubTree7 = splaySubTree2.add(" cnt=");
      splaySubTree4.splay();
      splaySubTree4.splay();
      splaySubTree7.toString();
      splaySubTree1.toString();
      splaySubTree2.size();
      splaySubTree7.add("");
      SplaySubTree<String> splaySubTree8 = splaySubTree4.add("");
      splaySubTree8.splay();
      splaySubTree5.get(2L);
      splaySubTree0.indexOf("7Q.m");
      splaySubTree6.get(0L);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      SplaySubTree<String> splaySubTree0 = new SplaySubTree<String>("");
      SplaySubTree<String> splaySubTree1 = splaySubTree0.add("7Q.m");
      SplaySubTree<String> splaySubTree2 = splaySubTree1.find("7Q.m");
      splaySubTree2.indexOf("7Q.m");
      SplaySubTree<String> splaySubTree3 = splaySubTree1.get(2L);
      splaySubTree3.remove("7Q.m");
      SplaySubTree<String> splaySubTree4 = splaySubTree1.add("7Q.m");
      SplaySubTree<String> splaySubTree5 = splaySubTree4.find("");
      SplaySubTree<String> splaySubTree6 = splaySubTree5.add("ojWV$|D;LNY5");
      splaySubTree4.splay();
      splaySubTree6.add(":8F~A$z'Hi");
      SplaySubTree<String> splaySubTree7 = splaySubTree2.add("ojWV$|D;LNY5");
      splaySubTree5.splay();
      splaySubTree7.toString();
      splaySubTree1.toString();
      splaySubTree2.size();
      splaySubTree3.splay();
      splaySubTree7.add("");
      splaySubTree2.get(2L);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      SplaySubTree<String> splaySubTree0 = new SplaySubTree<String>("");
      SplaySubTree<String> splaySubTree1 = splaySubTree0.add("7Q.m");
      SplaySubTree<String> splaySubTree2 = splaySubTree1.find("7Q.m");
      SplaySubTree<String> splaySubTree3 = splaySubTree1.add("7Q.m");
      SplaySubTree<String> splaySubTree4 = splaySubTree3.find("");
      SplaySubTree<String> splaySubTree5 = splaySubTree4.add("ojWV$|D;LNY5");
      splaySubTree5.remove("");
      splaySubTree5.indexOf("");
      SplaySubTree<String> splaySubTree6 = splaySubTree2.add("ojWV$|D;LNY5");
      splaySubTree2.splay();
      splaySubTree6.toString();
      splaySubTree1.toString();
      splaySubTree2.size();
      splaySubTree6.add("");
      splaySubTree2.get(4L);
      splaySubTree4.remove("");
      Integer integer0 = new Integer((-95));
      SplaySubTree<Integer> splaySubTree7 = new SplaySubTree<Integer>(integer0);
      Integer integer1 = new Integer((-95));
      SplaySubTree<Integer> splaySubTree8 = splaySubTree7.find(integer1);
      splaySubTree8.find(integer0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      SplaySubTree<String> splaySubTree0 = new SplaySubTree<String>("");
      SplaySubTree<String> splaySubTree1 = splaySubTree0.add("7Q.m");
      SplaySubTree<String> splaySubTree2 = splaySubTree1.find("7Q.m");
      splaySubTree2.indexOf("7Q.m");
      SplaySubTree<String> splaySubTree3 = splaySubTree1.get(2L);
      splaySubTree3.remove("7Q.m");
      SplaySubTree<String> splaySubTree4 = splaySubTree1.add("7Q.m");
      SplaySubTree<String> splaySubTree5 = splaySubTree4.find("");
      SplaySubTree<String> splaySubTree6 = splaySubTree5.add("ojWV$|D;LNY5");
      splaySubTree6.remove("");
      splaySubTree6.indexOf("");
      SplaySubTree<String> splaySubTree7 = splaySubTree2.add("ojWV$|D;LNY5");
      splaySubTree3.add("");
      splaySubTree2.splay();
      splaySubTree7.toString();
      splaySubTree1.toString();
      splaySubTree2.size();
      splaySubTree3.splay();
      splaySubTree7.add("");
      splaySubTree2.get(4L);
      // Undeclared exception!
      try { 
        splaySubTree5.remove("");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.mooctest.SplaySubTree", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      SplaySubTree<String> splaySubTree0 = new SplaySubTree<String>("");
      SplaySubTree<String> splaySubTree1 = splaySubTree0.add("7Q.m");
      SplaySubTree<String> splaySubTree2 = splaySubTree1.find("7Q.m");
      splaySubTree2.indexOf("7Q.m");
      SplaySubTree<String> splaySubTree3 = splaySubTree1.get(2L);
      splaySubTree3.remove("7Q.m");
      SplaySubTree<String> splaySubTree4 = splaySubTree1.add("7Q.m");
      SplaySubTree<String> splaySubTree5 = splaySubTree4.find("");
      SplaySubTree<String> splaySubTree6 = splaySubTree5.add(" cnt=");
      splaySubTree6.remove("");
      splaySubTree6.add(":8~$z'Hi");
      splaySubTree5.toString();
      SplaySubTree<String> splaySubTree7 = splaySubTree2.add(" cnt=");
      splaySubTree5.splay();
      splaySubTree7.toString();
      splaySubTree1.toString();
      splaySubTree2.size();
      splaySubTree7.add("");
      splaySubTree5.add("");
      splaySubTree6.get(2L);
      splaySubTree0.indexOf("");
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      SplaySubTree<String> splaySubTree0 = new SplaySubTree<String>("");
      SplaySubTree<String> splaySubTree1 = splaySubTree0.add("7Q.m");
      SplaySubTree<String> splaySubTree2 = splaySubTree1.find("7Q.m");
      splaySubTree2.indexOf("7Q.m");
      SplaySubTree<String> splaySubTree3 = splaySubTree1.get(2L);
      splaySubTree3.remove("7Q.m");
      SplaySubTree<String> splaySubTree4 = splaySubTree1.add("7Q.m");
      SplaySubTree<String> splaySubTree5 = splaySubTree4.find("");
      SplaySubTree<String> splaySubTree6 = splaySubTree5.add("ojWV$|D;LNY5");
      splaySubTree6.add(":8F~A$z'Hi");
      SplaySubTree<String> splaySubTree7 = splaySubTree2.add("ojWV$|D;LNY5");
      splaySubTree5.splay();
      splaySubTree7.toString();
      splaySubTree1.toString();
      splaySubTree2.size();
      splaySubTree7.add("");
      splaySubTree2.get(2L);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      SplaySubTree<String> splaySubTree0 = new SplaySubTree<String>("");
      SplaySubTree<String> splaySubTree1 = splaySubTree0.add("7Q.m");
      SplaySubTree<String> splaySubTree2 = splaySubTree1.find("7Q.m");
      splaySubTree2.indexOf("7Q.m");
      SplaySubTree<String> splaySubTree3 = splaySubTree1.get(2L);
      splaySubTree3.remove("7Q.m");
      SplaySubTree<String> splaySubTree4 = splaySubTree1.add("7Q.m");
      SplaySubTree<String> splaySubTree5 = splaySubTree4.find("");
      SplaySubTree<String> splaySubTree6 = splaySubTree5.add("ojWV$|D;LNY5");
      splaySubTree6.add(":8F~A$z'Hi");
      SplaySubTree<String> splaySubTree7 = splaySubTree2.add("ojWV$|D;LNY5");
      splaySubTree2.splay();
      splaySubTree7.toString();
      splaySubTree2.add("");
      splaySubTree1.toString();
      splaySubTree2.size();
      splaySubTree3.splay();
      splaySubTree7.add("");
      splaySubTree2.get(3L);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      SplaySubTree<String> splaySubTree0 = new SplaySubTree<String>("");
      SplaySubTree<String> splaySubTree1 = splaySubTree0.add("7Q.m");
      SplaySubTree<String> splaySubTree2 = splaySubTree1.find("7Q.m");
      splaySubTree2.indexOf("7Q.m");
      SplaySubTree<String> splaySubTree3 = splaySubTree1.get(2L);
      splaySubTree3.remove("7Q.m");
      SplaySubTree<String> splaySubTree4 = splaySubTree1.add("7Q.m");
      SplaySubTree<String> splaySubTree5 = splaySubTree4.find("");
      SplaySubTree<String> splaySubTree6 = splaySubTree5.add("ojWV$|D;LNY5");
      SplaySubTree<String> splaySubTree7 = splaySubTree6.add(":8F~A$z'Hi");
      SplaySubTree<String> splaySubTree8 = splaySubTree2.add("ojWV$|D;LNY5");
      splaySubTree5.splay();
      splaySubTree8.toString();
      splaySubTree1.toString();
      splaySubTree2.size();
      splaySubTree3.splay();
      splaySubTree8.add("");
      splaySubTree2.get(2L);
      splaySubTree4.join(splaySubTree7);
      Integer integer0 = new Integer((-18));
      SplaySubTree<Integer> splaySubTree9 = new SplaySubTree<Integer>(integer0);
      SplaySubTree<Integer> splaySubTree10 = splaySubTree9.remove((Integer) null);
      // Undeclared exception!
      try { 
        splaySubTree10.find((Integer) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.mooctest.SplaySubTree", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      SplaySubTree<String> splaySubTree0 = new SplaySubTree<String>("");
      SplaySubTree<String> splaySubTree1 = splaySubTree0.add("7Q.m");
      SplaySubTree<String> splaySubTree2 = splaySubTree1.find("7Q.m");
      splaySubTree2.indexOf("7Q.m");
      SplaySubTree<String> splaySubTree3 = splaySubTree1.get(2L);
      splaySubTree3.remove("7Q.m");
      SplaySubTree<String> splaySubTree4 = splaySubTree1.add("7Q.m");
      SplaySubTree<String> splaySubTree5 = splaySubTree4.find("");
      SplaySubTree<String> splaySubTree6 = splaySubTree5.add("ojWV$|D;LNY5");
      splaySubTree6.add(":8F~A$z'Hi");
      SplaySubTree<String> splaySubTree7 = splaySubTree2.add("ojWV$|D;LNY5");
      splaySubTree7.toString();
      splaySubTree1.toString();
      splaySubTree2.size();
      splaySubTree3.splay();
      splaySubTree7.add("");
      splaySubTree2.get(2L);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Integer integer0 = new Integer(1);
      Integer integer1 = new Integer(1);
      SplaySubTree<String> splaySubTree0 = new SplaySubTree<String>("q&~7%");
      SplaySubTree<String> splaySubTree1 = splaySubTree0.remove("q&~7%");
      splaySubTree1.get(1);
      SplaySubTree<String> splaySubTree2 = new SplaySubTree<String>("q&~7%");
      splaySubTree2.add(" right=");
      SplaySubTree<String> splaySubTree3 = splaySubTree1.remove(" right=");
      splaySubTree3.getData();
      splaySubTree1.add((String) null);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      SplaySubTree<String> splaySubTree0 = new SplaySubTree<String>("");
      SplaySubTree<String> splaySubTree1 = splaySubTree0.add("7Q.m");
      SplaySubTree<String> splaySubTree2 = splaySubTree1.find("7Q.m");
      splaySubTree2.indexOf("7Q.m");
      SplaySubTree<String> splaySubTree3 = splaySubTree1.get(2L);
      splaySubTree3.remove("7Q.m");
      SplaySubTree<String> splaySubTree4 = splaySubTree1.add("7Q.m");
      SplaySubTree<String> splaySubTree5 = splaySubTree4.find("");
      splaySubTree5.add("");
      SplaySubTree<String> splaySubTree6 = splaySubTree2.add("");
      splaySubTree3.add("");
      splaySubTree2.splay();
      splaySubTree6.toString();
      splaySubTree1.toString();
      splaySubTree2.size();
      splaySubTree3.splay();
      splaySubTree6.add("");
      splaySubTree2.get(5L);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      SplaySubTree<String> splaySubTree0 = new SplaySubTree<String>("");
      SplaySubTree<String> splaySubTree1 = splaySubTree0.add("7Q.m");
      SplaySubTree<String> splaySubTree2 = splaySubTree1.find("7Q.m");
      splaySubTree2.indexOf("7Q.m");
      SplaySubTree<String> splaySubTree3 = splaySubTree1.get(2L);
      splaySubTree3.remove("7Q.m");
      SplaySubTree<String> splaySubTree4 = splaySubTree1.add("7Q.m");
      SplaySubTree<String> splaySubTree5 = splaySubTree4.find("");
      SplaySubTree<String> splaySubTree6 = splaySubTree5.add("ojWV$|D;LNY5");
      splaySubTree6.add(":8F~A$z'Hi");
      SplaySubTree<String> splaySubTree7 = splaySubTree2.add("ojWV$|D;LNY5");
      splaySubTree2.splay();
      splaySubTree7.toString();
      splaySubTree1.toString();
      splaySubTree2.size();
      splaySubTree3.splay();
      splaySubTree7.add("");
      splaySubTree2.get(5L);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      SplaySubTree<String> splaySubTree0 = new SplaySubTree<String>("");
      SplaySubTree<String> splaySubTree1 = splaySubTree0.add("7Q.m");
      SplaySubTree<String> splaySubTree2 = splaySubTree1.find("7Q.m");
      splaySubTree2.indexOf("7Q.m");
      splaySubTree0.remove("7Q.m");
      SplaySubTree<String> splaySubTree3 = splaySubTree1.add("7Q.m");
      splaySubTree3.find("");
      SplaySubTree<String> splaySubTree4 = splaySubTree2.add("ojWV$|D;LNY5");
      splaySubTree2.splay();
      splaySubTree1.toString();
      SplaySubTree<String> splaySubTree5 = splaySubTree1.remove("");
      splaySubTree5.indexOf(" data=7Q.m left= right=ojWV$|D;LNY5 sz=4 cnt=2\n data= left= null right null sz=1 cnt=1\n data=ojWV$|D;LNY5 left= null right null sz=1 cnt=1\n");
      splaySubTree2.size();
      splaySubTree4.toString();
      splaySubTree0.splay();
      splaySubTree4.add("");
      splaySubTree3.get(2L);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      SplaySubTree<String> splaySubTree0 = new SplaySubTree<String>("");
      SplaySubTree<String> splaySubTree1 = splaySubTree0.add("7Q.m");
      SplaySubTree<String> splaySubTree2 = splaySubTree1.find("7Q.m");
      splaySubTree2.indexOf("7Q.m");
      SplaySubTree<String> splaySubTree3 = splaySubTree1.get(2L);
      splaySubTree3.remove("7Q.m");
      SplaySubTree<String> splaySubTree4 = splaySubTree1.add("7Q.m");
      SplaySubTree<String> splaySubTree5 = splaySubTree4.find("");
      SplaySubTree<String> splaySubTree6 = splaySubTree5.add("ojWV$|D;LNY5");
      splaySubTree6.indexOf("");
      SplaySubTree<String> splaySubTree7 = splaySubTree2.add("ojWV$|D;LNY5");
      splaySubTree3.add("");
      splaySubTree2.splay();
      splaySubTree7.toString();
      splaySubTree1.toString();
      splaySubTree2.size();
      splaySubTree3.splay();
      splaySubTree7.add("");
      splaySubTree2.get(5L);
      splaySubTree5.remove("");
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      SplaySubTree<String> splaySubTree0 = new SplaySubTree<String>("");
      SplaySubTree<String> splaySubTree1 = splaySubTree0.add("7Q.m");
      SplaySubTree<String> splaySubTree2 = splaySubTree1.find("7Q.m");
      splaySubTree2.indexOf("7Q.m");
      SplaySubTree<String> splaySubTree3 = splaySubTree1.get(2L);
      SplaySubTree<String> splaySubTree4 = splaySubTree1.add("7Q.m");
      SplaySubTree<String> splaySubTree5 = splaySubTree4.find("");
      splaySubTree5.add("ojWV$|D;LNY5");
      SplaySubTree<String> splaySubTree6 = splaySubTree2.add("ojWV$|D;LNY5");
      splaySubTree1.add("ojWV$|D;LNY5");
      SplaySubTree<String> splaySubTree7 = splaySubTree3.add("");
      splaySubTree2.splay();
      splaySubTree6.toString();
      splaySubTree1.toString();
      splaySubTree2.size();
      splaySubTree3.splay();
      splaySubTree6.add("");
      splaySubTree2.get(7L);
      splaySubTree7.indexOf("l#9z[FJ{2E2jbaexd");
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      String string0 = "P";
      SplaySubTree<String> splaySubTree0 = new SplaySubTree<String>("P");
      String string1 = "";
      SplaySubTree<String> splaySubTree1 = splaySubTree0.add("");
      splaySubTree1.add("qL#4PSHv8AF~/Zf{3");
      splaySubTree0.find("");
      splaySubTree1.toString();
      SplaySubTree<String> splaySubTree2 = splaySubTree1.find("");
      splaySubTree2.add("m 4q58SdeLf");
      splaySubTree2.add("\n");
      // Undeclared exception!
      try { 
        splaySubTree1.remove("");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.mooctest.SplaySubTree", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      SplaySubTree<String> splaySubTree0 = new SplaySubTree<String>("");
      SplaySubTree<String> splaySubTree1 = splaySubTree0.add("7Q.m");
      SplaySubTree<String> splaySubTree2 = splaySubTree1.find("7Q.m");
      splaySubTree2.indexOf("7Q.m");
      SplaySubTree<String> splaySubTree3 = splaySubTree1.get(2L);
      splaySubTree3.remove("7Q.m");
      SplaySubTree<String> splaySubTree4 = splaySubTree1.add("7Q.m");
      SplaySubTree<String> splaySubTree5 = splaySubTree4.find("");
      splaySubTree5.add("ojWV$|D;LNY5");
      SplaySubTree<String> splaySubTree6 = splaySubTree2.add("ojWV$|D;LNY5");
      splaySubTree3.add("");
      splaySubTree2.splay();
      splaySubTree6.toString();
      splaySubTree1.toString();
      splaySubTree2.size();
      splaySubTree3.splay();
      splaySubTree6.add("");
      splaySubTree2.get(5L);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      String string0 = "P";
      SplaySubTree<String> splaySubTree0 = new SplaySubTree<String>("P");
      String string1 = "";
      SplaySubTree<String> splaySubTree1 = splaySubTree0.add("");
      splaySubTree1.add("qL#4PSHv8AF~/Zf{3");
      splaySubTree0.find("");
      splaySubTree1.toString();
      SplaySubTree<String> splaySubTree2 = splaySubTree1.find("");
      SplaySubTree<String> splaySubTree3 = splaySubTree2.add("\n");
      splaySubTree3.indexOf("P");
      // Undeclared exception!
      try { 
        splaySubTree1.remove("");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.mooctest.SplaySubTree", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      SplaySubTree<String> splaySubTree0 = new SplaySubTree<String>("+0 i");
      SplaySubTree<String> splaySubTree1 = splaySubTree0.add("7.b");
      splaySubTree1.indexOf("7.b");
      SplaySubTree<String> splaySubTree2 = splaySubTree1.get(2L);
      SplaySubTree<String> splaySubTree3 = splaySubTree2.remove("7.b");
      splaySubTree3.find("ojWV$|D;LNY5");
      splaySubTree1.add("7.b");
      SplaySubTree<String> splaySubTree4 = splaySubTree0.add("ojWV$|D;LNY5");
      splaySubTree1.splay();
      splaySubTree0.size();
      splaySubTree1.splay();
      splaySubTree4.add("");
      splaySubTree4.find(" sz=");
      splaySubTree1.indexOf("");
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      SplaySubTree<String> splaySubTree0 = new SplaySubTree<String>("");
      SplaySubTree<String> splaySubTree1 = splaySubTree0.add("7Q.m");
      SplaySubTree<String> splaySubTree2 = splaySubTree1.find("7Q.m");
      splaySubTree2.indexOf("7Q.m");
      SplaySubTree<String> splaySubTree3 = splaySubTree1.get(2L);
      splaySubTree3.remove("7Q.m");
      SplaySubTree<String> splaySubTree4 = splaySubTree1.add("7Q.m");
      splaySubTree4.find("");
      SplaySubTree<String> splaySubTree5 = splaySubTree2.add("ojWV$|D;LNY5");
      splaySubTree1.toString();
      SplaySubTree<String> splaySubTree6 = splaySubTree3.remove("");
      splaySubTree6.indexOf(" data=");
      splaySubTree2.size();
      splaySubTree5.toString();
      splaySubTree3.splay();
      splaySubTree3.find("");
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      SplaySubTree<Integer> splaySubTree0 = new SplaySubTree<Integer>((Integer) null);
      splaySubTree0.getData();
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      SplaySubTree<String> splaySubTree0 = new SplaySubTree<String>("Z8");
      SplaySubTree<String> splaySubTree1 = splaySubTree0.add("7Q.m");
      SplaySubTree<String> splaySubTree2 = splaySubTree1.find("7Q.m");
      splaySubTree2.indexOf("7Q.m");
      SplaySubTree<String> splaySubTree3 = splaySubTree2.remove("7Q.m");
      splaySubTree3.remove("7Q.m");
      SplaySubTree<String> splaySubTree4 = splaySubTree1.add("7Q.m");
      splaySubTree4.find("");
      SplaySubTree<String> splaySubTree5 = splaySubTree2.add("ojWV$|D;LNY5");
      splaySubTree2.splay();
      splaySubTree1.toString();
      splaySubTree2.size();
      splaySubTree3.splay();
      splaySubTree5.add("");
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      SplaySubTree<String> splaySubTree0 = new SplaySubTree<String>("");
      SplaySubTree<String> splaySubTree1 = splaySubTree0.add("7Q.m");
      SplaySubTree<String> splaySubTree2 = splaySubTree1.find("7Q.m");
      splaySubTree2.indexOf("7Q.m");
      SplaySubTree<String> splaySubTree3 = splaySubTree1.get(2L);
      SplaySubTree<String> splaySubTree4 = splaySubTree3.remove("7Q.m");
      splaySubTree4.find("");
      splaySubTree1.add("7Q.m");
      SplaySubTree<String> splaySubTree5 = splaySubTree2.add("7Q.m");
      splaySubTree5.find("7Q.m");
      splaySubTree2.splay();
      splaySubTree2.size();
      splaySubTree3.splay();
      SplaySubTree<String> splaySubTree6 = splaySubTree5.add("");
      splaySubTree6.get(2L);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      SplaySubTree<String> splaySubTree0 = new SplaySubTree<String>("");
      SplaySubTree<String> splaySubTree1 = splaySubTree0.add("7Q.m");
      SplaySubTree<String> splaySubTree2 = splaySubTree1.find("7Q.m");
      splaySubTree2.indexOf("7Q.m");
      SplaySubTree<String> splaySubTree3 = splaySubTree1.get(2L);
      splaySubTree3.remove("7Q.m");
      splaySubTree3.add("");
      SplaySubTree<String> splaySubTree4 = splaySubTree1.add("7Q.m");
      SplaySubTree<String> splaySubTree5 = splaySubTree4.find("");
      splaySubTree5.add("ojWV$|D;LNY5");
      splaySubTree2.add("ojWV$|D;LNY5");
      splaySubTree2.splay();
      splaySubTree1.toString();
      splaySubTree2.size();
      splaySubTree3.splay();
      splaySubTree1.join(splaySubTree2);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      SplaySubTree<String> splaySubTree0 = new SplaySubTree<String>("");
      SplaySubTree<String> splaySubTree1 = splaySubTree0.add("7Q.m");
      SplaySubTree<String> splaySubTree2 = splaySubTree1.find("7Q.m");
      splaySubTree2.indexOf("7Q.m");
      SplaySubTree<String> splaySubTree3 = splaySubTree1.get(2L);
      splaySubTree3.remove("7Q.m");
      splaySubTree1.add("7Q.m");
      SplaySubTree<String> splaySubTree4 = splaySubTree2.add("ojWV$|D;LNY5");
      splaySubTree2.splay();
      splaySubTree2.size();
      splaySubTree3.splay();
      splaySubTree4.add("");
      splaySubTree2.get(0L);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      SplaySubTree<String> splaySubTree0 = new SplaySubTree<String>("P");
      splaySubTree0.remove("");
      SplaySubTree<String> splaySubTree1 = splaySubTree0.add("");
      SplaySubTree<String> splaySubTree2 = splaySubTree1.add("qL#4PSHv8AF~/Zf{3");
      splaySubTree2.toString();
      splaySubTree0.find("");
      splaySubTree1.toString();
      splaySubTree1.toString();
      SplaySubTree<String> splaySubTree3 = splaySubTree1.find("");
      splaySubTree3.toString();
      splaySubTree1.splay();
      splaySubTree3.add("\n");
      // Undeclared exception!
      try { 
        splaySubTree1.remove("");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.mooctest.SplaySubTree", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      String string0 = "P";
      SplaySubTree<String> splaySubTree0 = new SplaySubTree<String>("P");
      String string1 = "qL#4PSHv8AF~/Zf{3";
      SplaySubTree<String> splaySubTree1 = splaySubTree0.remove("P");
      splaySubTree0.size();
      splaySubTree1.splay();
      String string2 = null;
      try { 
        Integer.decode("qL#4PSHv8AF~/Zf{3");
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // For input string: \"qL#4PSHv8AF~/Zf{3\"
         //
         verifyException("java.lang.NumberFormatException", e);
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Integer integer0 = new Integer(32);
      Integer integer1 = new Integer(1);
      SplaySubTree<String> splaySubTree0 = new SplaySubTree<String>("q&~7%");
      SplaySubTree<String> splaySubTree1 = splaySubTree0.remove("q&~7%");
      splaySubTree1.find("q&~7%");
      SplaySubTree<String> splaySubTree2 = new SplaySubTree<String>("q&~7%");
      SplaySubTree<String> splaySubTree3 = splaySubTree2.add(" right=");
      SplaySubTree<String> splaySubTree4 = splaySubTree3.find("q&~7%");
      splaySubTree4.getData();
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      SplaySubTree<String> splaySubTree0 = new SplaySubTree<String>("");
      SplaySubTree<String> splaySubTree1 = splaySubTree0.add("7Q.m");
      SplaySubTree<String> splaySubTree2 = splaySubTree1.find("7Q.m");
      splaySubTree2.indexOf("7Q.m");
      SplaySubTree<String> splaySubTree3 = splaySubTree1.get(2L);
      splaySubTree3.remove("7Q.m");
      SplaySubTree<String> splaySubTree4 = splaySubTree1.add("7Q.m");
      splaySubTree4.find("");
      splaySubTree2.add("ojWV$|D;LNY5");
      splaySubTree2.splay();
      splaySubTree1.toString();
      splaySubTree2.size();
      splaySubTree3.splay();
      splaySubTree1.join(splaySubTree2);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      SplaySubTree<String> splaySubTree0 = new SplaySubTree<String>("");
      SplaySubTree<String> splaySubTree1 = splaySubTree0.add("7Q.m");
      splaySubTree1.indexOf("7Q.m");
      SplaySubTree<String> splaySubTree2 = splaySubTree1.get(2L);
      SplaySubTree<String> splaySubTree3 = splaySubTree2.remove("7Q.m");
      splaySubTree3.find("ojWV$|D;LNY5");
      splaySubTree1.add("7Q.m");
      SplaySubTree<String> splaySubTree4 = splaySubTree0.add("ojWV$|D;LNY5");
      splaySubTree1.splay();
      splaySubTree0.size();
      splaySubTree2.splay();
      splaySubTree4.add("");
      splaySubTree4.find(" sz=");
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      String string0 = "P";
      SplaySubTree<String> splaySubTree0 = new SplaySubTree<String>("P");
      String string1 = "";
      SplaySubTree<String> splaySubTree1 = splaySubTree0.add("qL#4PSHv8AF~/Zf{3");
      splaySubTree1.indexOf(" left=");
      try { 
        Integer.valueOf("", (-1));
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // radix -1 less than Character.MIN_RADIX
         //
         verifyException("java.lang.Integer", e);
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      SplaySubTree<String> splaySubTree0 = new SplaySubTree<String>("");
      SplaySubTree<String> splaySubTree1 = splaySubTree0.add("7Q.m");
      SplaySubTree<String> splaySubTree2 = splaySubTree1.find("7Q.m");
      splaySubTree2.indexOf("7Q.m");
      SplaySubTree<String> splaySubTree3 = splaySubTree1.get(2L);
      splaySubTree3.remove("7Q.m");
      SplaySubTree<String> splaySubTree4 = splaySubTree1.add("7Q.m");
      splaySubTree4.find("");
      SplaySubTree<String> splaySubTree5 = splaySubTree0.find("");
      splaySubTree2.splay();
      splaySubTree1.toString();
      splaySubTree3.indexOf("");
      splaySubTree2.size();
      splaySubTree3.splay();
      splaySubTree5.add("");
      splaySubTree5.remove("");
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      SplaySubTree<String> splaySubTree0 = new SplaySubTree<String>("");
      SplaySubTree<String> splaySubTree1 = splaySubTree0.add("7Q.m");
      SplaySubTree<String> splaySubTree2 = splaySubTree1.find("7Q.m");
      splaySubTree2.indexOf("7Q.m");
      SplaySubTree<String> splaySubTree3 = splaySubTree1.get(2L);
      SplaySubTree<String> splaySubTree4 = splaySubTree3.remove("7Q.m");
      SplaySubTree<String> splaySubTree5 = splaySubTree1.add("7Q.m");
      splaySubTree5.find("");
      SplaySubTree<String> splaySubTree6 = splaySubTree2.add("ojWV$|D;LNY5");
      splaySubTree2.splay();
      splaySubTree1.toString();
      splaySubTree2.size();
      splaySubTree3.splay();
      splaySubTree5.remove("");
      splaySubTree6.add("");
      splaySubTree5.size();
      splaySubTree3.join(splaySubTree4);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      SplaySubTree<String> splaySubTree0 = new SplaySubTree<String>("");
      String string0 = "A=Y11lJ5E+~O&8J";
      splaySubTree0.add("");
      splaySubTree0.indexOf("A=Y11lJ5E+~O&8J");
      splaySubTree0.toString();
      splaySubTree0.split("");
      try { 
        Integer.decode(" data= left= null right null sz=2 cnt=2\n");
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // For input string: \" data= left= null right null sz=2 cnt=2
         // \"
         //
         verifyException("java.lang.NumberFormatException", e);
      }
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      Integer integer0 = new Integer(1);
      Integer integer1 = new Integer(1);
      SplaySubTree<String> splaySubTree0 = new SplaySubTree<String>("q&~7%");
      SplaySubTree<String> splaySubTree1 = splaySubTree0.remove("q&~7%");
      splaySubTree1.get(1);
      SplaySubTree<String> splaySubTree2 = new SplaySubTree<String>("q&~7%");
      SplaySubTree<String> splaySubTree3 = splaySubTree2.add(" right=");
      SplaySubTree<String> splaySubTree4 = splaySubTree3.find("q&~7%");
      splaySubTree4.getData();
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      String string0 = "";
      SplaySubTree<String> splaySubTree0 = new SplaySubTree<String>("");
      SplaySubTree<String> splaySubTree1 = splaySubTree0.add("&5U&0Q2RVl:*@");
      SplaySubTree<String> splaySubTree2 = splaySubTree1.get(1L);
      splaySubTree1.toString();
      // Undeclared exception!
      try { 
        splaySubTree2.remove("");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.mooctest.SplaySubTree", e);
      }
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      String string0 = "P";
      SplaySubTree<String> splaySubTree0 = new SplaySubTree<String>("P");
      String string1 = "";
      SplaySubTree<String> splaySubTree1 = splaySubTree0.add("");
      splaySubTree1.add("qL#4PSHv8AF~/Zf{3");
      // Undeclared exception!
      try { 
        splaySubTree1.remove("");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.mooctest.SplaySubTree", e);
      }
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      String string0 = "P";
      SplaySubTree<String> splaySubTree0 = new SplaySubTree<String>("P");
      String string1 = "";
      SplaySubTree<String> splaySubTree1 = splaySubTree0.add("");
      splaySubTree1.add("qL#4PSHv8AF~/Zf{3");
      splaySubTree0.find("");
      splaySubTree1.toString();
      SplaySubTree<String> splaySubTree2 = splaySubTree1.find("");
      splaySubTree2.add("\n");
      // Undeclared exception!
      try { 
        splaySubTree1.remove("");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.mooctest.SplaySubTree", e);
      }
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      SplaySubTree<String> splaySubTree0 = new SplaySubTree<String>("");
      SplaySubTree<String> splaySubTree1 = splaySubTree0.add("7Q.m");
      SplaySubTree<String> splaySubTree2 = splaySubTree1.find("7Q.m");
      splaySubTree2.indexOf("7Q.m");
      SplaySubTree<String> splaySubTree3 = splaySubTree1.get(2L);
      splaySubTree3.remove("7Q.m");
      SplaySubTree<String> splaySubTree4 = splaySubTree1.add("7Q.m");
      splaySubTree4.find("");
      SplaySubTree<String> splaySubTree5 = splaySubTree2.add("ojWV$|D;LNY5");
      splaySubTree2.splay();
      splaySubTree1.toString();
      splaySubTree3.remove("");
      splaySubTree2.size();
      splaySubTree3.splay();
      splaySubTree5.add("");
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      String string0 = "P";
      SplaySubTree<String> splaySubTree0 = new SplaySubTree<String>("P");
      String string1 = "";
      SplaySubTree<String> splaySubTree1 = splaySubTree0.add("");
      SplaySubTree<String> splaySubTree2 = splaySubTree1.add("qL#4PSHv8AF~/Zf{3");
      splaySubTree2.remove("&te2.,QhB");
      // Undeclared exception!
      try { 
        splaySubTree1.remove("");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.mooctest.SplaySubTree", e);
      }
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      String string0 = "qw";
      SplaySubTree<String> splaySubTree0 = new SplaySubTree<String>("qw");
      String string1 = "";
      SplaySubTree<String> splaySubTree1 = splaySubTree0.add("");
      splaySubTree1.add("qL#4PSHv8AF~/Zf{3");
      // Undeclared exception!
      try { 
        splaySubTree1.remove("");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.mooctest.SplaySubTree", e);
      }
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      SplaySubTree<String> splaySubTree0 = new SplaySubTree<String>("");
      SplaySubTree<String> splaySubTree1 = splaySubTree0.add("7Q.m");
      SplaySubTree<String> splaySubTree2 = splaySubTree1.find("7Q.m");
      splaySubTree2.indexOf("7Q.m");
      SplaySubTree<String> splaySubTree3 = splaySubTree1.get(2L);
      splaySubTree3.remove("7Q.m");
      splaySubTree1.add("7Q.m");
      SplaySubTree<String> splaySubTree4 = splaySubTree2.add("ojWV$|D;LNY5");
      splaySubTree2.splay();
      splaySubTree2.size();
      splaySubTree3.splay();
      splaySubTree4.add("");
      splaySubTree2.splay();
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      SplaySubTree<String> splaySubTree0 = new SplaySubTree<String>("");
      SplaySubTree<String> splaySubTree1 = splaySubTree0.add("7Q.m");
      SplaySubTree<String> splaySubTree2 = splaySubTree1.find("7Q.m");
      splaySubTree2.indexOf("7Q.m");
      SplaySubTree<String> splaySubTree3 = splaySubTree1.get(2L);
      splaySubTree3.remove("7Q.m");
      SplaySubTree<String> splaySubTree4 = splaySubTree1.add("7Q.m");
      splaySubTree4.find("");
      SplaySubTree<String> splaySubTree5 = splaySubTree2.add("ojWV$|D;LNY5");
      splaySubTree2.splay();
      splaySubTree1.toString();
      splaySubTree2.size();
      splaySubTree3.splay();
      splaySubTree5.add("");
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      SplaySubTree<String> splaySubTree0 = new SplaySubTree<String>("");
      SplaySubTree<String> splaySubTree1 = splaySubTree0.add("7Q.m");
      SplaySubTree<String> splaySubTree2 = splaySubTree1.find("7Q.m");
      splaySubTree2.indexOf("7Q.m");
      SplaySubTree<String> splaySubTree3 = splaySubTree1.get(2L);
      splaySubTree3.remove("7Q.m");
      splaySubTree3.remove("7Q.m");
      splaySubTree1.splay();
      SplaySubTree<String> splaySubTree4 = splaySubTree2.add("ojWV$|D;LNY5");
      splaySubTree2.splay();
      splaySubTree2.size();
      splaySubTree4.add("");
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      SplaySubTree<String> splaySubTree0 = new SplaySubTree<String>("");
      SplaySubTree<String> splaySubTree1 = splaySubTree0.add("7Q.m");
      SplaySubTree<String> splaySubTree2 = splaySubTree1.find("7Q.m");
      splaySubTree2.indexOf("7Q.m");
      SplaySubTree<String> splaySubTree3 = splaySubTree1.get(2L);
      splaySubTree3.remove("7Q.m");
      SplaySubTree<String> splaySubTree4 = splaySubTree1.add("7Q.m");
      SplaySubTree<String> splaySubTree5 = splaySubTree2.add("ojWV$|D;LNY5");
      splaySubTree2.splay();
      splaySubTree1.find("ojWV$|D;LNY5");
      splaySubTree2.size();
      splaySubTree3.splay();
      splaySubTree5.add("");
      splaySubTree4.add("");
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      SplaySubTree<String> splaySubTree0 = new SplaySubTree<String>("");
      SplaySubTree<String> splaySubTree1 = splaySubTree0.add("7Q.m");
      SplaySubTree<String> splaySubTree2 = splaySubTree1.find("7Q.m");
      splaySubTree2.indexOf("7Q.m");
      SplaySubTree<String> splaySubTree3 = splaySubTree1.remove("");
      splaySubTree3.remove("7Q.m");
      splaySubTree2.add("#>Zny=l4_2eG/}<");
      splaySubTree2.splay();
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      SplaySubTree<String> splaySubTree0 = new SplaySubTree<String>("g#R$S/( ?m*`mP>B;K");
      splaySubTree0.remove("g#R$S/( ?m*`mP>B;K");
      SplaySubTree<String> splaySubTree1 = splaySubTree0.remove("g#R$S/( ?m*`mP>B;K");
      // Undeclared exception!
      try { 
        splaySubTree1.indexOf(" left=");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.mooctest.SplaySubTree", e);
      }
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      String string0 = "P";
      SplaySubTree<String> splaySubTree0 = new SplaySubTree<String>("P");
      String string1 = "";
      splaySubTree0.add("");
      // Undeclared exception!
      try { 
        splaySubTree0.remove("P");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.mooctest.SplaySubTree", e);
      }
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      String string0 = "P";
      SplaySubTree<String> splaySubTree0 = new SplaySubTree<String>("P");
      String string1 = "";
      SplaySubTree<String> splaySubTree1 = splaySubTree0.add("");
      SplaySubTree<String> splaySubTree2 = splaySubTree1.add("qL#4PSHv8AF~/Zf{3");
      splaySubTree2.find("");
      // Undeclared exception!
      try { 
        splaySubTree1.remove("");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.mooctest.SplaySubTree", e);
      }
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      Integer integer0 = new Integer(0);
      Integer integer1 = new Integer(0);
      Integer integer2 = new Integer(0);
      Integer integer3 = new Integer(0);
      SplaySubTree<Integer> splaySubTree0 = new SplaySubTree<Integer>(integer3);
      Integer integer4 = new Integer(0);
      SplaySubTree<Integer> splaySubTree1 = splaySubTree0.add(integer4);
      splaySubTree1.get((-371L));
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      SplaySubTree<String> splaySubTree0 = new SplaySubTree<String>("");
      SplaySubTree<String> splaySubTree1 = splaySubTree0.add("7Q.m");
      SplaySubTree<String> splaySubTree2 = splaySubTree1.find("7Q.m");
      splaySubTree2.indexOf("7Q.m");
      SplaySubTree<String> splaySubTree3 = splaySubTree1.remove("");
      splaySubTree3.indexOf("dYjZ}Z*f");
      splaySubTree3.remove("7Q.m");
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      SplaySubTree<String> splaySubTree0 = new SplaySubTree<String>(" left=");
      splaySubTree0.toString();
      Integer integer0 = new Integer(0);
      SplaySubTree<Integer> splaySubTree1 = new SplaySubTree<Integer>(integer0);
      Integer integer1 = Integer.valueOf(0);
      splaySubTree1.find(integer0);
      SplaySubTree<Integer> splaySubTree2 = splaySubTree1.add(integer1);
      splaySubTree2.join(splaySubTree1);
      splaySubTree0.find("[wGj/ZK2>TXI");
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      SplaySubTree<String> splaySubTree0 = new SplaySubTree<String>("");
      Integer.getInteger("");
      SplaySubTree<Integer> splaySubTree1 = new SplaySubTree<Integer>((Integer) null);
      splaySubTree1.join(splaySubTree1);
      splaySubTree1.toString();
      Integer.remainderUnsigned(0, 2696);
      SplaySubTree<String> splaySubTree2 = splaySubTree0.remove("9pS2-D0)gZPOs(]u^");
      splaySubTree2.splay();
      splaySubTree1.indexOf((Integer) null);
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      SplaySubTree<String> splaySubTree0 = new SplaySubTree<String>("");
      SplaySubTree<String> splaySubTree1 = splaySubTree0.add(")GN{t");
      splaySubTree1.indexOf(")GN{t");
      SplaySubTree<String> splaySubTree2 = splaySubTree1.remove(")GN{t");
      splaySubTree1.add(")GN{t");
      SplaySubTree<String> splaySubTree3 = splaySubTree2.find("");
      SplaySubTree<String> splaySubTree4 = splaySubTree3.find("");
      splaySubTree0.find("");
      splaySubTree4.indexOf("gc%mWZ");
      splaySubTree3.add("F@!:32P3z7`-)@0");
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      String string0 = " cnt=";
      SplaySubTree<String> splaySubTree0 = new SplaySubTree<String>(" cnt=");
      String string1 = "";
      splaySubTree0.indexOf(" cnt=");
      SplaySubTree<String> splaySubTree1 = splaySubTree0.add("");
      splaySubTree1.splay();
      SplaySubTree<String> splaySubTree2 = splaySubTree1.add(" cnt=");
      splaySubTree2.splay();
      splaySubTree0.splay();
      splaySubTree0.add("");
      splaySubTree0.toString();
      splaySubTree0.getData();
      String string2 = "!";
      try { 
        Integer.valueOf("!");
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // For input string: \"!\"
         //
         verifyException("java.lang.NumberFormatException", e);
      }
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      Integer integer0 = new Integer((-1));
      SplaySubTree<Integer> splaySubTree0 = new SplaySubTree<Integer>(integer0);
      Integer integer1 = new Integer((-1824));
      splaySubTree0.indexOf(integer0);
      Integer.getInteger("GiSK.^^{ 3vY", integer1);
      splaySubTree0.find(integer0);
      SplaySubTree<String> splaySubTree1 = new SplaySubTree<String>("w[)Ub%\"tp");
      SplaySubTree<String> splaySubTree2 = splaySubTree1.add("GiSK.^^{ 3vY");
      splaySubTree1.split((String) null);
      splaySubTree1.size();
      splaySubTree1.indexOf("GiSK.^^{ 3vY");
      Integer integer2 = new Integer((-1353));
      splaySubTree0.add(integer2);
      splaySubTree2.get(0L);
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      SplaySubTree<String> splaySubTree0 = new SplaySubTree<String>("");
      splaySubTree0.toString();
      splaySubTree0.add(" right=");
      splaySubTree0.toString();
      SplaySubTree<String> splaySubTree1 = splaySubTree0.find("");
      splaySubTree0.get(1022L);
      splaySubTree1.find("");
      SplaySubTree<String> splaySubTree2 = splaySubTree0.remove("|~HhEC*L");
      splaySubTree2.join(splaySubTree1);
  }

  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      SplaySubTree<String> splaySubTree0 = new SplaySubTree<String>("oRm_G<nk2Mseu");
      SplaySubTree<String> splaySubTree1 = splaySubTree0.remove("#? @.P45w{gt");
      splaySubTree1.find("@u~?}Xnnmb2RXV");
  }

  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      String string0 = "";
      SplaySubTree<String> splaySubTree0 = new SplaySubTree<String>("");
      SplaySubTree<String> splaySubTree1 = splaySubTree0.add("&5U&0Q2R ;Vl:*@");
      SplaySubTree<String> splaySubTree2 = splaySubTree1.get(1L);
      splaySubTree1.toString();
      // Undeclared exception!
      try { 
        splaySubTree2.remove("");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.mooctest.SplaySubTree", e);
      }
  }

  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      String string0 = "[ SSCp";
      SplaySubTree<String> splaySubTree0 = new SplaySubTree<String>("[ SSCp");
      String string1 = null;
      splaySubTree0.indexOf("[ SSCp");
      // Undeclared exception!
      try { 
        splaySubTree0.find((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.mooctest.SplaySubTree", e);
      }
  }

  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      String string0 = null;
      SplaySubTree<String> splaySubTree0 = new SplaySubTree<String>((String) null);
      splaySubTree0.find((String) null);
      long long0 = (-595L);
      // Undeclared exception!
      try { 
        splaySubTree0.indexOf("");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.mooctest.SplaySubTree", e);
      }
  }

  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      SplaySubTree<String> splaySubTree0 = new SplaySubTree<String>(" cnt=");
      splaySubTree0.split(" cnt=");
      splaySubTree0.join((SplaySubTree<String>) null);
  }

  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      SplaySubTree<String> splaySubTree0 = new SplaySubTree<String>("");
      SplaySubTree<String> splaySubTree1 = splaySubTree0.add("7Q.m");
      SplaySubTree<String> splaySubTree2 = splaySubTree1.find("7Q.m");
      splaySubTree2.indexOf("7Q.m");
      SplaySubTree<String> splaySubTree3 = splaySubTree1.remove("");
      splaySubTree3.remove("7Q.m");
      splaySubTree2.add("ojWV$|D;LNY5");
      splaySubTree2.splay();
  }

  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      SplaySubTree<Integer> splaySubTree0 = new SplaySubTree<Integer>((Integer) null);
      Integer integer0 = new Integer(0);
      SplaySubTree<Integer> splaySubTree1 = splaySubTree0.remove(integer0);
      Integer integer1 = new Integer((-2247));
      SplaySubTree<Integer> splaySubTree2 = splaySubTree1.add(integer1);
      splaySubTree2.splay();
  }

  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      SplaySubTree<String> splaySubTree0 = new SplaySubTree<String>("b%8ro8c|s");
      splaySubTree0.indexOf(")Kt");
      splaySubTree0.add("b%8ro8c|s");
      splaySubTree0.size();
      splaySubTree0.getData();
      Integer integer0 = new Integer(1);
      SplaySubTree<Integer> splaySubTree1 = new SplaySubTree<Integer>(integer0);
      SplaySubTree<Integer> splaySubTree2 = splaySubTree1.remove(integer0);
      SplaySubTree<Integer> splaySubTree3 = splaySubTree2.add((Integer) null);
      splaySubTree3.toString();
  }

  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      Integer integer0 = new Integer((-326));
      SplaySubTree<Integer> splaySubTree0 = new SplaySubTree<Integer>(integer0);
      Integer integer1 = new Integer(0);
      SplaySubTree<Integer> splaySubTree1 = splaySubTree0.add(integer1);
      Integer integer2 = new Integer(1113);
      splaySubTree1.remove(integer2);
      splaySubTree0.indexOf(integer0);
      splaySubTree0.add(integer0);
  }

  @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      Integer integer0 = new Integer(0);
      SplaySubTree<Integer> splaySubTree0 = new SplaySubTree<Integer>(integer0);
      splaySubTree0.remove((Integer) null);
      try { 
        Integer.decode("#v<Fl3KkL'GZ9%g");
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // For input string: \"v<Fl3KkL'GZ9%g\"
         //
         verifyException("java.lang.NumberFormatException", e);
      }
  }

  @Test(timeout = 4000)
  public void test68()  throws Throwable  {
      SplaySubTree<String> splaySubTree0 = new SplaySubTree<String>("");
      SplaySubTree<String> splaySubTree1 = splaySubTree0.add("7Q.m");
      splaySubTree1.indexOf("7Q.m");
      SplaySubTree<String> splaySubTree2 = splaySubTree1.get(2L);
      SplaySubTree<String> splaySubTree3 = splaySubTree2.remove("7Q.m");
      splaySubTree3.add("ojWV$|D;LNY5");
      splaySubTree3.find(" right null");
      splaySubTree3.remove("7Q.m");
      splaySubTree3.find("ojWV$|D;LNY5");
      splaySubTree1.add("7Q.m");
      // Undeclared exception!
      splaySubTree0.add("ojWV$|D;LNY5");
  }

  @Test(timeout = 4000)
  public void test69()  throws Throwable  {
      SplaySubTree<String> splaySubTree0 = new SplaySubTree<String>(" cnt=");
      splaySubTree0.indexOf((String) null);
      splaySubTree0.splay();
      splaySubTree0.split(" cnt=");
      splaySubTree0.join((SplaySubTree<String>) null);
  }

  @Test(timeout = 4000)
  public void test70()  throws Throwable  {
      SplaySubTree<String> splaySubTree0 = new SplaySubTree<String>("");
      SplaySubTree<String> splaySubTree1 = splaySubTree0.add("7Q.m");
      SplaySubTree<String> splaySubTree2 = splaySubTree1.find("7Q.m");
      splaySubTree1.splay();
      SplaySubTree<String> splaySubTree3 = splaySubTree1.find("");
      SplaySubTree<String> splaySubTree4 = splaySubTree3.add("ojWV$|D;LNY5");
      splaySubTree4.add(":8F~A$z'Hi");
      SplaySubTree<String> splaySubTree5 = splaySubTree2.add("ojWV$|D;LNY5");
      splaySubTree3.splay();
      splaySubTree5.toString();
      splaySubTree1.toString();
      splaySubTree2.size();
      splaySubTree5.add("");
      splaySubTree2.get(2L);
  }

  @Test(timeout = 4000)
  public void test71()  throws Throwable  {
      String string0 = "Ck7EIp89Y#a=yk|`9";
      try { 
        Integer.valueOf("Ck7EIp89Y#a=yk|`9", (-235));
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // radix -235 less than Character.MIN_RADIX
         //
         verifyException("java.lang.Integer", e);
      }
  }

  @Test(timeout = 4000)
  public void test72()  throws Throwable  {
      SplaySubTree<String> splaySubTree0 = new SplaySubTree<String>("");
      SplaySubTree<String> splaySubTree1 = splaySubTree0.add("7Q.m");
      SplaySubTree<String> splaySubTree2 = splaySubTree1.find("7Q.m");
      splaySubTree2.indexOf("7Q.m");
      SplaySubTree<String> splaySubTree3 = splaySubTree1.get(2L);
      splaySubTree3.remove("7Q.m");
      SplaySubTree<String> splaySubTree4 = splaySubTree1.add("7Q.m");
      SplaySubTree<String> splaySubTree5 = splaySubTree4.find("");
      splaySubTree4.remove("ojWV$|D;LNY5");
      SplaySubTree<String> splaySubTree6 = splaySubTree5.add("ojWV$|D;LNY5");
      splaySubTree6.add(":8F~A$z'Hi");
      SplaySubTree<String> splaySubTree7 = splaySubTree2.add("ojWV$|D;LNY5");
      splaySubTree7.toString();
      splaySubTree1.toString();
      splaySubTree2.size();
      splaySubTree3.splay();
      splaySubTree7.add("");
      SplaySubTree<String> splaySubTree8 = splaySubTree2.get(2L);
      splaySubTree8.splay();
  }

  @Test(timeout = 4000)
  public void test73()  throws Throwable  {
      SplaySubTree<String> splaySubTree0 = new SplaySubTree<String>("");
      SplaySubTree<String> splaySubTree1 = splaySubTree0.add("7Q.m");
      SplaySubTree<String> splaySubTree2 = splaySubTree1.find("7Q.m");
      splaySubTree2.indexOf("7Q.m");
      SplaySubTree<String> splaySubTree3 = splaySubTree1.get(2L);
      splaySubTree3.remove("7Q.m");
      SplaySubTree<String> splaySubTree4 = splaySubTree3.find("");
      SplaySubTree<String> splaySubTree5 = splaySubTree4.add(" cnt=");
      splaySubTree5.remove("");
      SplaySubTree<String> splaySubTree6 = splaySubTree5.add(":8~$z'Hi");
      splaySubTree6.indexOf("");
      splaySubTree4.toString();
      SplaySubTree<String> splaySubTree7 = splaySubTree2.add(" cnt=");
      splaySubTree4.splay();
      splaySubTree4.splay();
      splaySubTree7.toString();
      splaySubTree1.toString();
      splaySubTree2.size();
      splaySubTree7.add("");
      SplaySubTree<String> splaySubTree8 = splaySubTree4.add("");
      splaySubTree8.splay();
      splaySubTree5.get(2L);
      splaySubTree0.indexOf("7Q.m");
  }

  @Test(timeout = 4000)
  public void test74()  throws Throwable  {
      SplaySubTree<String> splaySubTree0 = new SplaySubTree<String>("");
      SplaySubTree<String> splaySubTree1 = splaySubTree0.add("7Q.m");
      splaySubTree1.indexOf("7Q.m");
      SplaySubTree<String> splaySubTree2 = splaySubTree1.get(2L);
      SplaySubTree<String> splaySubTree3 = splaySubTree2.remove("7Q.m");
      splaySubTree3.remove("7Q.m");
      splaySubTree3.find("ojWV$|D;LNY5");
      splaySubTree1.add("7Q.m");
      SplaySubTree<String> splaySubTree4 = splaySubTree0.add("ojWV$|D;LNY5");
      splaySubTree1.splay();
      splaySubTree0.size();
      splaySubTree2.splay();
      splaySubTree4.add("");
  }

  @Test(timeout = 4000)
  public void test75()  throws Throwable  {
      SplaySubTree<String> splaySubTree0 = new SplaySubTree<String>("");
      SplaySubTree<String> splaySubTree1 = splaySubTree0.add("7Q.m");
      splaySubTree1.indexOf("7Q.m");
      SplaySubTree<String> splaySubTree2 = splaySubTree1.get(2L);
      SplaySubTree<String> splaySubTree3 = splaySubTree2.remove("7Q.m");
      splaySubTree3.remove("7Q.m");
      splaySubTree3.find("ojWV$|D;LNY5");
      splaySubTree1.add("7Q.m");
      SplaySubTree<String> splaySubTree4 = splaySubTree0.add("ojWV$|D;LNY5");
      splaySubTree1.splay();
      splaySubTree0.size();
      splaySubTree2.splay();
      splaySubTree4.add((String) null);
      splaySubTree4.find(" sz=");
      Integer integer0 = Integer.getInteger("'*_Ss`\raRBt", 162);
      SplaySubTree<Integer> splaySubTree5 = new SplaySubTree<Integer>(integer0);
      Integer integer1 = new Integer(162);
      splaySubTree5.split(integer1);
  }

  @Test(timeout = 4000)
  public void test76()  throws Throwable  {
      SplaySubTree<String> splaySubTree0 = new SplaySubTree<String>("");
      SplaySubTree<String> splaySubTree1 = splaySubTree0.add("7Q.m");
      SplaySubTree<String> splaySubTree2 = splaySubTree1.find("7Q.m");
      splaySubTree2.indexOf("7Q.m");
      splaySubTree1.splay();
      SplaySubTree<String> splaySubTree3 = splaySubTree1.get(2L);
      splaySubTree3.remove("7Q.m");
      SplaySubTree<String> splaySubTree4 = splaySubTree1.add("7Q.m");
      SplaySubTree<String> splaySubTree5 = splaySubTree4.find("");
      SplaySubTree<String> splaySubTree6 = splaySubTree5.add("ojWV$|D;LNY5");
      splaySubTree6.indexOf("");
      SplaySubTree<String> splaySubTree7 = splaySubTree2.add("ojWV$|D;LNY5");
      splaySubTree3.add("");
      splaySubTree2.splay();
      splaySubTree7.toString();
      splaySubTree1.toString();
      splaySubTree3.splay();
      splaySubTree7.add("");
      splaySubTree2.get(2L);
      SplaySubTree<String> splaySubTree8 = splaySubTree5.remove("");
      splaySubTree8.find("");
      splaySubTree2.indexOf("*");
      splaySubTree3.add("cxjj");
      splaySubTree4.get(339L);
  }

  @Test(timeout = 4000)
  public void test77()  throws Throwable  {
      SplaySubTree<String> splaySubTree0 = new SplaySubTree<String>("");
      SplaySubTree<String> splaySubTree1 = splaySubTree0.add("7Q.m");
      SplaySubTree<String> splaySubTree2 = splaySubTree1.find("7Q.m");
      splaySubTree2.indexOf("7Q.m");
      SplaySubTree<String> splaySubTree3 = splaySubTree1.get(2L);
      SplaySubTree<String> splaySubTree4 = splaySubTree3.remove("7Q.m");
      splaySubTree4.splay();
      SplaySubTree<String> splaySubTree5 = splaySubTree1.add("7Q.m");
      SplaySubTree<String> splaySubTree6 = splaySubTree5.find("");
      SplaySubTree<String> splaySubTree7 = splaySubTree6.add("ojWV$|D;LNY5");
      splaySubTree7.remove("");
      splaySubTree7.indexOf("");
      SplaySubTree<String> splaySubTree8 = splaySubTree2.add("ojWV$|D;LNY5");
      splaySubTree3.add("");
      splaySubTree2.splay();
      splaySubTree8.toString();
      splaySubTree2.size();
      splaySubTree3.splay();
      splaySubTree8.add("");
      // Undeclared exception!
      try { 
        splaySubTree6.remove("");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.mooctest.SplaySubTree", e);
      }
  }

  @Test(timeout = 4000)
  public void test78()  throws Throwable  {
      Integer integer0 = new Integer(1);
      SplaySubTree<String> splaySubTree0 = new SplaySubTree<String>("q&~7%");
      splaySubTree0.splay();
      SplaySubTree<String> splaySubTree1 = splaySubTree0.remove("q&~7%");
      SplaySubTree<String> splaySubTree2 = new SplaySubTree<String>("q&~7%");
      splaySubTree1.splay();
      SplaySubTree<String> splaySubTree3 = splaySubTree2.add(" right=");
      splaySubTree3.indexOf("q&~7%");
      splaySubTree1.remove("g");
      splaySubTree2.getData();
      splaySubTree1.add("q&~7%");
  }

  @Test(timeout = 4000)
  public void test79()  throws Throwable  {
      Integer integer0 = new Integer(1);
      Integer integer1 = new Integer(1);
      SplaySubTree<String> splaySubTree0 = new SplaySubTree<String>("q&~7%");
      SplaySubTree<String> splaySubTree1 = splaySubTree0.remove("q&~7%");
      splaySubTree1.add("q&~7%");
      splaySubTree1.get(1);
      SplaySubTree<String> splaySubTree2 = new SplaySubTree<String>("q&~7%");
      SplaySubTree<String> splaySubTree3 = splaySubTree2.add("q&~7%");
      SplaySubTree<String> splaySubTree4 = splaySubTree3.find("q&~7%");
      splaySubTree4.getData();
      splaySubTree0.size();
      splaySubTree2.get((-1856L));
      Integer integer2 = new Integer(1);
      SplaySubTree<Integer> splaySubTree5 = new SplaySubTree<Integer>(integer2);
      splaySubTree5.add(integer0);
      splaySubTree4.toString();
      splaySubTree3.get(0L);
  }

  @Test(timeout = 4000)
  public void test80()  throws Throwable  {
      SplaySubTree<String> splaySubTree0 = new SplaySubTree<String>("");
      SplaySubTree<String> splaySubTree1 = splaySubTree0.add("7Q.m");
      SplaySubTree<String> splaySubTree2 = splaySubTree1.find("7Q.m");
      splaySubTree2.indexOf("7Q.m");
      splaySubTree0.remove("7Q.m");
      SplaySubTree<String> splaySubTree3 = splaySubTree1.add("7Q.m");
      SplaySubTree<String> splaySubTree4 = new SplaySubTree<String>("");
      SplaySubTree<String> splaySubTree5 = splaySubTree2.add("ojWV$|D;LNY5");
      splaySubTree2.splay();
      splaySubTree0.toString();
      SplaySubTree<String> splaySubTree6 = splaySubTree1.remove("");
      splaySubTree6.indexOf(" data= left= null right null sz=1 cnt=1\n");
      splaySubTree2.size();
      splaySubTree5.toString();
      splaySubTree0.splay();
      SplaySubTree<String> splaySubTree7 = splaySubTree5.add("");
      splaySubTree7.indexOf("nL");
      splaySubTree3.get(2L);
      try { 
        Integer.valueOf("", (-95));
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // radix -95 less than Character.MIN_RADIX
         //
         verifyException("java.lang.Integer", e);
      }
  }

  @Test(timeout = 4000)
  public void test81()  throws Throwable  {
      String string0 = "?";
      SplaySubTree<String> splaySubTree0 = new SplaySubTree<String>("?");
      splaySubTree0.add("&5U&0Q2RVl:*@");
      // Undeclared exception!
      try { 
        splaySubTree0.remove("?");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.mooctest.SplaySubTree", e);
      }
  }

  @Test(timeout = 4000)
  public void test82()  throws Throwable  {
      SplaySubTree<String> splaySubTree0 = new SplaySubTree<String>("P");
      SplaySubTree<String> splaySubTree1 = splaySubTree0.add("");
      SplaySubTree<String> splaySubTree2 = splaySubTree1.add("qL#4PSHv8AF~/Zf{3");
      splaySubTree0.find("");
      splaySubTree1.toString();
      assertEquals(2L, splaySubTree0.size());
      
      splaySubTree2.add("\n");
      assertEquals(1L, splaySubTree1.size());
  }
}
